{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","console","log","length","step","setTimeout","innerHTML","substring","window","scrollTo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,uuDAAJ;;AAiEA,IAAIC,UAAU,EAAd;AACA,IAAIC,IAAI,CAAR;AACAC,QAAQC,GAAR,CAAYJ,OAAOK,MAAnB;;AAGA,IAAIC,OAAO,SAAPA,IAAO,GAAM;;AAEbC,eAAW,YAAM;;AAEb;AACA;AACA;AACA;AACAN,mBAAYD,OAAOE,CAAP,MAAc,IAAd,GAAqB,MAArB,GAA+BF,OAAOE,CAAP,MAAc,GAAd,GAAoB,QAApB,GAA+BF,OAAOE,CAAP,CAA1E;AACAN,aAAKY,SAAL,GAAiBP,OAAjB;AACAF,cAAMS,SAAN,GAAkBR,OAAOS,SAAP,CAAiB,CAAjB,EAAoBP,CAApB,CAAlB;AACAQ,eAAOC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACAf,aAAKe,QAAL,CAAc,CAAd,EAAiB,KAAjB;AACAT,aAAK,CAAL;AACA,YAAIA,IAAIF,OAAOK,MAAf,EAAuB;AACnBC;AACH;AAEJ,KAhBD,EAgBG,EAhBH;AAkBH,CApBD;;AAuBAA","file":"main.5f351abc.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html');\r\nlet style = document.querySelector('#style');\r\nlet string = `\r\n/*\r\n *你好,我叫CGC\r\n *接下来我要展示我的前端功底\r\n *首先我要准备一个div\r\n */\r\n#div1{\r\n    border:1px solid silver;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来,我要把这个div变成一个太极图\r\n * 注意看好了\r\n * 首先,把div变成一个圆\r\n */\r\n#div1 {\r\n    border-radius: 50%;\r\n    box-shadow: 1px 1px 5px 3px rgba(151, 145, 145, 0.4);\r\n    border: none\r\n}\r\n/* 太极生两仪\r\n * 一黑一白\r\n */\r\n\r\n#div1{\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*\r\n * 增加两个阴阳鱼\r\n*/\r\n\r\n#div1::before {\r\n    content: ' ';\r\n    display: block;\r\n    border-radius: 50%;\r\n    /* border:transparent 1px solid; */\r\n    height: 100px;\r\n    width: 100px;\r\n    position: relative;\r\n    top: 0px;\r\n    left: 50px;\r\n    background: rgb(255, 255, 255);\r\n    background: radial-gradient(circle, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 1) 15%, rgba(255, 255, 255, 1) 16%, rgba(255, 255, 255, 1) 100%);\r\n}\r\n\r\n#div1::after {\r\n    content: ' ';\r\n    display: block;\r\n    border-radius: 50%;\r\n    /* border: transparent 1px solid; */\r\n    height: 100px;\r\n    width: 100px;\r\n    position: relative;\r\n    top: 0px;\r\n    left: 50px;\r\n    background: rgb(0, 0, 0);\r\n    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 15%, rgba(0, 0, 0, 1) 16%, rgba(0, 0, 0, 1) 100%);\r\n}\r\n\r\n/*   太极绘制完成\r\n *   展示结束\r\n */\r\n`;\r\n\r\nlet string2 = \"\";\r\nlet n = 0\r\nconsole.log(string.length);\r\n\r\n\r\nlet step = () => {\r\n\r\n    setTimeout(() => {\r\n\r\n        // 如果是回车,就把回车替换为<br>\r\n        //如果不是回车,就照搬string1\r\n        //另一种 解决输出undefined 的方法\r\n        // else if(string[n]===undefined){}  \r\n        string2 += (string[n] === '\\n' ? '<br>' : (string[n] === ' ' ? '&ensp;' : string[n]))\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0, 99999);\r\n        html.scrollTo(0, 99999);\r\n        n += 1;\r\n        if (n < string.length) {\r\n            step()\r\n        }\r\n\r\n    }, 20)\r\n\r\n}\r\n\r\n\r\nstep()"]}